import * as tslib_1 from "tslib";
import * as React from "react";
import get from "lodash.get";
import { Field } from "formik";
import { Form } from "antd";
export const FormItem = (_a) => {
    var { name, showValidateSuccess, children } = _a, restProps = tslib_1.__rest(_a, ["name", "showValidateSuccess", "children"]);
    return (React.createElement(Field, { name: name }, ({ form: { errors = {}, touched = {} } }) => {
        const error = get(errors, name, undefined);
        const isTouched = get(touched, name, false);
        const hasError = error !== undefined && isTouched;
        const isValid = !error && isTouched;
        return (React.createElement(Form.Item, Object.assign({ validateStatus: hasError ? "error" : (isValid && showValidateSuccess) ? "success" : undefined, hasFeedback: isValid, help: (hasError && React.createElement("li", null, error)) || (isValid && "") }, restProps), children));
    }));
};
//# sourceMappingURL=FormItem.js.map